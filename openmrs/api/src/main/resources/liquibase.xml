<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright 2015 The Project Buendia Authors
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License"); you may not
  ~ use this file except in compliance with the License.  You may obtain a copy
  ~ of the License at: http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software distrib-
  ~ uted under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
  ~ OR CONDITIONS OF ANY KIND, either express or implied.  See the License for
  ~ specific language governing permissions and limitations under the License.
  -->
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                  http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">
    <changeSet id="buendia-add-person-date-updated-index" author="@capnfabs">
        <!--
        Note: this changeset is buggy. See `buendia-modify-person-insert-triggers` for the fix.
        -->
        <createTable
                tableName="buendia_patient_sync_map"
                remarks="Records are automatically inserted by triggers on the `person` table." >
            <column name="patient_id" type="INTEGER">
                <constraints
                        primaryKey="true"
                        nullable="false" />
            </column>
            <column name="date_updated" type="TIMESTAMP" />
            <!--
            We need to store UUID here as well as on the person table, because otherwise we can't
            create an index across the two columns.
            -->
            <column name="uuid" type="CHAR(38)" />
        </createTable>
        <addForeignKeyConstraint
            baseTableName="buendia_patient_sync_map"
            baseColumnNames="patient_id"
            constraintName="patient_id_to_person"
            referencedTableName="person"
            referencedColumnNames="person_id"
            onDelete="CASCADE"
            onUpdate="CASCADE" />
        <createIndex tableName="buendia_patient_sync_map" indexName="pagination_index">
            <column name="date_updated" />
            <column name="uuid" />
        </createIndex>
        <sql>
            <!-- Insert records for the patients that are already here. -->
            INSERT INTO `buendia_patient_sync_map` (`patient_id`, `date_updated`, `uuid`)
            SELECT `person_id`, NOW(), `uuid`
            FROM `person`
            WHERE EXISTS (SELECT 1 FROM `patient` WHERE `patient`.`patient_id` = `person_id`)
        </sql>
        <sql splitStatements="false">
            DROP TRIGGER IF EXISTS `buendia_patient_update_date_updated`
        </sql>
        <sql splitStatements="false">
            <!--
            We need to use `person` for this instead of `patient` because `person` is where
            the UUID is stored.
            -->
            CREATE TRIGGER `buendia_patient_update_date_updated` AFTER UPDATE
            ON `person` FOR EACH ROW
            IF EXISTS (SELECT 1 FROM `patient` WHERE `patient_id` = NEW.`person_id`) THEN
                REPLACE INTO `buendia_patient_sync_map` (patient_id, date_updated, uuid)
                VALUES (NEW.person_id, NOW(), NEW.uuid);
            END IF;
        </sql>
        <sql>
            DROP TRIGGER IF EXISTS `buendia_patient_insert_date_updated`
        </sql>
        <sql splitStatements="false">
            <!--
            We need to use `person` for this instead of `patient` because `person` is where
            the UUID is stored.
            -->
            CREATE TRIGGER `buendia_patient_insert_date_updated` AFTER INSERT
            ON `person` FOR EACH ROW
            IF EXISTS (SELECT 1 FROM `patient` WHERE `patient_id` = NEW.`person_id`) THEN
                REPLACE INTO `buendia_patient_sync_map` (patient_id, date_updated, uuid)
                VALUES (NEW.person_id, NOW(), NEW.uuid);
            END IF;
        </sql>
        <rollback>
            <dropTable tableName="buendia_patient_sync_map" />
            <sql>
                DROP TRIGGER IF EXISTS `buendia_patient_update_date_updated`;
                DROP TRIGGER IF EXISTS `buendia_patient_insert_date_updated`;
            </sql>
        </rollback>
    </changeSet>

    <changeSet id="buendia-add-obs-date-updated-index" author="@capnfabs">
        <createTable
                tableName="buendia_obs_sync_map"
                remarks="Records are automatically inserted by triggers on the `obs` table." >
            <column name="obs_id" type="INTEGER">
                <constraints
                        primaryKey="true"
                        nullable="false" />
            </column>
            <column name="date_updated" type="TIMESTAMP" />
            <!--
            We need to store UUID here as well as on the obs table, because otherwise we can't
            create an index across the two columns.
            -->
            <column name="uuid" type="CHAR(38)" />
        </createTable>
        <addForeignKeyConstraint
                baseTableName="buendia_obs_sync_map"
                baseColumnNames="obs_id"
                constraintName="obs_id_to_obs"
                referencedTableName="obs"
                referencedColumnNames="obs_id"
                onDelete="CASCADE"
                onUpdate="CASCADE" />
        <createIndex tableName="buendia_obs_sync_map" indexName="pagination_index">
            <column name="date_updated" />
            <column name="uuid" />
        </createIndex>
        <sql>
            <!-- Insert records for the obs that are already here. -->
            INSERT INTO `buendia_obs_sync_map` (`obs_id`, `date_updated`, `uuid`)
            SELECT `obs_id`, NOW(), `uuid`
            FROM `obs`
        </sql>
        <sql>
            DROP TRIGGER IF EXISTS `buendia_obs_update_date_updated`
        </sql>
        <sql>
            CREATE TRIGGER `buendia_obs_update_date_updated` AFTER UPDATE
            ON `obs` FOR EACH ROW
            REPLACE INTO `buendia_obs_sync_map` (obs_id, date_updated, uuid)
            VALUES (NEW.obs_id, NOW(), NEW.uuid)
        </sql>
        <sql>
            DROP TRIGGER IF EXISTS `buendia_obs_insert_date_updated`
        </sql>
        <sql>
            CREATE TRIGGER `buendia_obs_insert_date_updated` AFTER INSERT
            ON `obs` FOR EACH ROW
            REPLACE INTO `buendia_obs_sync_map` (obs_id, date_updated, uuid)
            VALUES (NEW.obs_id, NOW(), NEW.uuid)
        </sql>
        <rollback>
            <dropTable tableName="buendia_obs_sync_map" />
            <sql>
                DROP TRIGGER IF EXISTS `buendia_obs_update_date_updated`;
                DROP TRIGGER IF EXISTS `buendia_obs_insert_date_updated`;
            </sql>
        </rollback>
    </changeSet>

    <changeSet id="buendia-add-order-date-updated-index" author="@capnfabs">
        <createTable
                tableName="buendia_order_sync_map"
                remarks="Records are automatically inserted by triggers on the `orders` table." >
            <column name="order_id" type="INTEGER">
                <constraints
                        primaryKey="true"
                        nullable="false" />
            </column>
            <column name="date_updated" type="TIMESTAMP" />
            <!--
            We need to store UUID here as well as on the order table, because otherwise we can't
            create an index across the two columns.
            -->
            <column name="uuid" type="CHAR(38)" />
        </createTable>
        <addForeignKeyConstraint
                baseTableName="buendia_order_sync_map"
                baseColumnNames="order_id"
                constraintName="order_id_to_order"
                referencedTableName="orders"
                referencedColumnNames="order_id"
                onDelete="CASCADE"
                onUpdate="CASCADE" />
        <createIndex tableName="buendia_order_sync_map" indexName="pagination_index">
            <column name="date_updated" />
            <column name="uuid" />
        </createIndex>
        <sql>
            <!-- Insert records for the order that are already here. -->
            INSERT INTO `buendia_order_sync_map` (`order_id`, `date_updated`, `uuid`)
            SELECT `order_id`, NOW(), `uuid`
            FROM `orders`
        </sql>
        <sql>
            DROP TRIGGER IF EXISTS `buendia_order_update_date_updated`
        </sql>
        <sql>
            CREATE TRIGGER `buendia_order_update_date_updated` AFTER UPDATE
            ON `orders` FOR EACH ROW
            REPLACE INTO `buendia_order_sync_map` (order_id, date_updated, uuid)
            VALUES (NEW.order_id, NOW(), NEW.uuid)
        </sql>
        <sql>
            DROP TRIGGER IF EXISTS `buendia_order_insert_date_updated`
        </sql>
        <sql>
            CREATE TRIGGER `buendia_order_insert_date_updated` AFTER INSERT
            ON `orders` FOR EACH ROW
            REPLACE INTO `buendia_order_sync_map` (order_id, date_updated, uuid)
            VALUES (NEW.order_id, NOW(), NEW.uuid)
        </sql>
        <rollback>
            <dropTable tableName="buendia_order_sync_map" />
            <sql>
                DROP TRIGGER IF EXISTS `buendia_order_update_date_updated`;
                DROP TRIGGER IF EXISTS `buendia_order_insert_date_updated`;
            </sql>
        </rollback>
    </changeSet>
    <changeSet id="buendia-modify-person-insert-triggers" author="@capnfabs">
        <!--
        This changeset fixes a bug in `buendia-add-person-date-updated-index`. See
        https://github.com/projectbuendia/client/issues/187
        -->
        <sql>
            DROP TRIGGER IF EXISTS `buendia_patient_insert_date_updated`;

            <!--
            The `person` table gets updated for a superset of changes to the `patient` table, so for
            UPDATES, we define a trigger on the `person` table and check that the `person` is a
            `patient`. See `buendia-add-person-date-updated-index`.

            For INSERTS, however, we can't do the check that a `person` is a `patient`, because the
            `patient` row hasn't been inserted in the database yet. We work around this by defining
            a trigger on the `patient` table that checks the `person` table and obtains details from
            there if appropriate.
            -->
            CREATE TRIGGER `buendia_patient_insert_date_updated` AFTER INSERT
            ON `patient` FOR EACH ROW
            REPLACE INTO `buendia_patient_sync_map` (patient_id, date_updated, uuid)
            VALUES (
                NEW.patient_id,
                NOW(),
                (SELECT uuid FROM person WHERE person_id = NEW.patient_id)
            );
        </sql>
    </changeSet>
</databaseChangeLog>
