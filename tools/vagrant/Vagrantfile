# -*- mode: ruby -*-
# vi: set ft=ruby :

# Set BRIDGED in the shell environment to the interface name to bridge to.
# e.g.
#
#   BRIDGED="en0: Wi-Fi (AirPort)" vagrant up
#
# Setting it to any value that isn't an interface will cause Vagrant to prompt
# you as to which interface you want to bridge to.
bridgedInterface = ENV["BRIDGED"]

Vagrant.configure("2") do |config|
  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder "../../", "/mnt/buendia"

  # The 'build' VM is intended as a build environment for Buendia.
  config.vm.define "build", primary: true do |node|
    # debian/contrib-stretch64 includes the vboxsf guest additions
    node.vm.box = "debian/contrib-stretch64"
    node.vm.provider "virtualbox" do |v|
      v.name = "buendia-build"
    end
    node.vm.provision "shell", path: "./provision-build.sh"
    if bridgedInterface
      node.vm.network "public_network", type: "dhcp", bridge: bridgedInterface
    else
      node.vm.network "forwarded_port", guest: 9000, host: 9000
      node.vm.network "forwarded_port", guest: 9999, host: 9999, host_ip: "127.0.0.1"
    end
  end 

  # The 'testing' VM is intended for testing of built packages.
  config.vm.define "testing", autostart: false do |node|
    # debian/contrib-stretch64 includes the vboxsf guest additions
    node.vm.box = "debian/contrib-stretch64"
    node.vm.provider "virtualbox" do |v|
      v.name = "buendia-testing"
    end
    node.vm.provision "shell", path: "./provision-testing.sh"
    if bridgedInterface
      node.vm.network "public_network", type: "dhcp", bridge: bridgedInterface
    else
      node.vm.network "forwarded_port", guest: 9000, host: 19000
      node.vm.network "forwarded_port", guest: 9001, host: 19001
      node.vm.network "forwarded_port", guest: 9999, host: 19999, host_ip: "127.0.0.1"
    end
  end 

  # The 'alpine' VM is meant as a proof of concept and isn't intended for
  # production use.
  config.vm.define "alpine", autostart: false do |node|
    node.vm.box = "maier/alpine-3.8-x86_64"
    node.vm.provider "virtualbox" do |v|
      v.name = "buendia-alpine"
    end
    node.vm.provision "shell", path: "./provision-alpine.sh"
  end
end
