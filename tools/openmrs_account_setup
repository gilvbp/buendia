#!/bin/bash
# Copyright 2015 The Project Buendia Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License.  You may obtain a copy
# of the License at: http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distrib-
# uted under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
# OR CONDITIONS OF ANY KIND, either express or implied.  See the License for
# specific language governing permissions and limitations under the License.

# Sets up the OpenMRS account used for Buendia API requests.

set -e
mysql_database="$1"
openmrs_user="$2"
openmrs_password="$3"
if [[ $1 = '-h' || -z $1 || -z $2 || -z $3 ]]; then
    echo "Usage: $0 <mysql_database> <openmrs_user> <openmrs_password>"
    echo
    echo "Sets up an OpenMRS user with the given username and password"
    echo "as the account to be used for Buendia API requests.  If the"
    echo "OpenMRS user account already exists, changes its password."
    echo "To disable login for the account, enter NULL as the password."
    echo
    echo 'Requires $MYSQL_USER and $MYSQL_PASSWORD to be set to valid'
    echo 'credentials for a MySQL user that has been granted access with:'
    echo '    GRANT USAGE ON <mysql_database>.* to <mysql_user>@<host>'
    exit 1
fi

eval $(buendia-settings 2>/dev/null)

MYSQL_USER=${MYSQL_USER-$OPENMRS_MYSQL_USER}
MYSQL_PASSWORD=${MYSQL_PASSWORD-$OPENMRS_MYSQL_PASSWORD}

if [ -z "$MYSQL_USER" ]; then
    echo '$MYSQL_USER is not set; please set $MYSQL_USER and $MYSQL_PASSWORD.'
    exit 1
fi

export MYSQL_PWD="$MYSQL_PASSWORD"
MYSQL="mysql -u$MYSQL_USER -s -N openmrs"

function randhex() {
    xxd -l $(($1 / 2)) -p /dev/urandom | tr -d '\n'
}

function uuidgen() {
    randhex 32 | sed -e 's/\(........\)\(....\)\(....\)\(....\)\(............\)/\1-\2-\3-\4-\5/'
}

# Look for a user with the given username.
USER_UUID=$($MYSQL <<< "
    select uuid from users where username = '$openmrs_user';
" 2>/dev/null)
USER_UUID=$(echo $USER_UUID | tr A-Z a-z)

if [ $openmrs_password = NULL ]; then
    if [ -z "$USER_UUID" ]; then
        USER_UUID=$(uuidgen)
        $MYSQL <<< "
            set @admin_id :=
                (select user_id from users where system_id = 'admin');
            set @person_id :=
                (select person_id from users where system_id = 'admin');

            insert into users (system_id, username, password, salt,
                               date_created, creator, person_id, uuid)
                values ('$openmrs_user', '$openmrs_user', NULL, NULL,
                        now(), @admin_id, @person_id, '$USER_UUID');
        "
    else
        $MYSQL <<< "
            update users set password = NULL, salt = NULL
                where uuid = '$USER_UUID';
        "
    fi
    echo "OpenMRS account '$openmrs_user' now exists with login disabled."
    exit 0
fi

# If there is no user account with the given username, add one.
if [ -z "$USER_UUID" ]; then
    USER_UUID=$(uuidgen)
    PERSON_UUID=$(uuidgen)
    PERSON_NAME_UUID=$(uuidgen)

    # "System Developer" is a magic role name that grants superuser privileges
    salt=$(randhex 128)
    $MYSQL <<< "
        set @admin_id := (select user_id from users where system_id = 'admin');

        insert ignore into person (date_created, creator, uuid)
            values (now(), @admin_id, '$PERSON_UUID');

        set @person_id :=
            (select person_id from person where uuid = '$PERSON_UUID');

        insert ignore into person_name (preferred, given_name, family_name,
                                        date_created, creator, person_id, uuid)
            values (1, 'Buendia', 'Client',
                    now(), @admin_id, @person_id, '$PERSON_NAME_UUID');

        insert into users (system_id, username, password,
                           salt, date_created, creator, person_id, uuid)
            values ('$openmrs_user', '$openmrs_user',
                    sha2('$openmrs_password$salt', 512),
                    '$salt', now(), @admin_id, @person_id, '$USER_UUID');

        set @user_id := last_insert_id();

        insert into user_role (user_id, role)
        values (@user_id, 'Provider'),
               (@user_id, 'System Developer');
    "
    echo "Added new user $openmrs_user [$USER_UUID]."
else
    echo "Found existing user $openmrs_user [$USER_UUID]."
    # Check if the username and password are already correctly set.
    if $MYSQL <<< "
        select count(*) from users
            where uuid = '$USER_UUID' and username = '$openmrs_user' and
            password = sha2(concat('$openmrs_password', salt), 512);
    " 2>/dev/null | grep -q 1; then
        echo "Password unchanged."
    else
        # Set the username and password for the Android client, using fresh salt.
        salt=$(randhex 128)
        $MYSQL <<< "
            update users set
                salt = '$salt',
                system_id = '$openmrs_user',
                username = '$openmrs_user',
                password = sha2(concat('$openmrs_password', salt), 512)
                where uuid = '$USER_UUID';
        "
        echo "Changed password."
    fi
fi

echo "OpenMRS account '$openmrs_user' is ready for Buendia API requests."
