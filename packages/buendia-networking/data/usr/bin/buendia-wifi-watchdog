#!/bin/bash
# Copyright 2015 The Project Buendia Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License.  You may obtain a copy
# of the License at: http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distrib-
# uted under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
# OR CONDITIONS OF ANY KIND, either express or implied.  See the License for
# specific language governing permissions and limitations under the License.

# When the server is in wifi client mode (connecting to an external AP), we've
# observed that it sometimes loses its connection to the wifi AP after a
# couple of days, resulting in a major outage of the system; we don't know if
# it's due to the server's wifi hardware, driver software, or a problem with
# the wifi AP.  However, we do know that in this state a simple reboot brings
# everything back to working order.  This watchdog checks if the server has
# fallen off the wifi network, and kicks wpa_supplicant to make it rejoin.

set -e
. /usr/share/buendia/utils.sh

# If a software update is in progress, we don't want to interfere with it.
exec 9> /var/run/lock/buendia-update
if ! flock -s -n 9; then
    echo "Not checking wifi: buendia-update is currently running."
    exit 1
fi

# If it's only been a couple of minutes since boot, the server is still coming
# up; don't expect networking to be up yet.
min_upsecs=180
upsecs=$(grep -o '[0-9]\+' /proc/uptime | head -1)
if [ "$upsecs" -lt "$min_upsecs" ]; then
    echo "Not checking wifi: uptime ($upsecs s) has not reached $min_upsecs s yet."
    exit 1
fi

# The observed problem occurs when the server is a wifi client, not a wifi AP.
if bool "$NETWORKING_AP"; then
    echo "Not checking wifi: server is an AP creating its own wifi network."
    exit 1
fi

if [ -z "$NETWORKING_WIFI_INTERFACE" -o -z "$NETWORKING_SSID" ]; then
    echo "Not checking wifi: NETWORKING_WIFI_INTERFACE or NETWORKING_SSID is unset."
    exit 1
fi

# iwconfig will tell us if we're associated to an access point.
tmpfile=/tmp/$(basename $0).$$
trap 'rm -rf $tmpfile' EXIT
iwconfig $NETWORKING_WIFI_INTERFACE >$tmpfile 2>&1

# If we are associated to an access point, _and_ we have a broadcast address we
# can ping, then we assume that the wifi network is up.
if ! grep -q "Access Point: Not-Associated" $tmpfile; then
    broadcast_address=$(ip route | grep "^[0-9\.]*/[0-9]* dev $NETWORKING_WIFI_INTERFACE" | cut -d/ -f1)
    echo "Broadcast address is ${broadcast_address:-not found}" >>$tmpfile
    if [ -n "$broadcast_address" ] && ping -w1 -c1 -b $broadcast_address >>$tmpfile 2>&1; then
        # Success!
        exit 0
    fi
fi

# If we couldn't find an access point or someone on the local network, then
# restart the networking stack.
echo "Network appears to be down:"
cat $tmpfile
echo "Restarting wifi."
# "-f" means to force redoing network setup even though the network
# configuration settings haven't changed.
buendia-reconfigure -f networking
